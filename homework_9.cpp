#include <iostream>
#include <random>

using namespace std;

int main() {
    srand(time(NULL));
    /*
    1.  Создаёт массив из 5 элементов типа int.
    2.  Создаёт указатель ptr, который указывает на первый элемент массива.
    3.  Использует арифметику указателей, чтобы вывести каждый элемент массива через разыменование указателя.

    int mass[] = {10, 20, 30, 40, 50};
    int *ptr = mass;
    for (int i = 0; i < 5; i++) {
        cout << *ptr << endl;
        ptr++;
    }*/

    /*Задача 2: Инкремент и декремент указателя
    Напишите программу, которая:
    1.  Создаёт массив из 4 элементов.
    2.  Использует указатель ptr для перемещения по массиву с помощью операций инкремента (ptr++) и декремента (ptr--).
    3.  Выводит элементы массива в прямом и обратном порядке.


    int mass[] = {1, 3, 5, 7};
    int *ptr = mass;
    cout << "числа в прямом порядке: ";
    for (auto i : mass) {
        cout << *ptr << ' ';
        ptr++;
    }
    cout << endl;
    cout << "числа в обратном порядке: ";
    ptr--;
    for (auto i : mass) {
        cout << *ptr << ' ';
        ptr--;
    } */

     // Задача 3: Вычисление расстояния между указателями
     // Напишите программу, которая:
     // 1.  Создаёт массив из 6 элементов.
     // 2.  Создаёт два указателя: ptr1, указывающий на первый элемент массива, и ptr2, указывающий на последний элемент массива.
     // 3.  Вычисляет расстояние между указателями и выводит его.

     /*int mass[] = {2, 4, 6, 8, 10, 12};
     int *ptr1 = mass;
     int *ptr2 = mass + 5;
     int a = *ptr2 - *ptr1;
     for (auto i : mass) {
         cout << *ptr1 << ' ';
         ptr1++;
     }
     cout << "растояние между последним и первым элементом: " << a << endl;
     ptr1 = mass;
    for (int i = 0; i < 7; i++) {
        cout << *ptr1 << ' ';
        ptr1++;
    }
*/

    /*Задача 5: Арифметика указателей с динамическим массивом
    Напишите программу, которая:
    1.  Динамически выделяет память для массива из 5 элементов с использованием new.
    2.  Заполняет массив значениями с помощью указателя.
    3.  Выводит элементы массива через арифметику указателей.
    4.  Освобождает память с помощью delete[]

    int mass[5];
    int *ptr = mass;
    for (int i = 0; i < 5; i++) {
        mass[i] = rand() % 10;
    }
    for (auto i : mass) {
        cout << *ptr << ' ';
        ptr++;
    }*/

    /*Задача 6: Перебор массива с использованием указателей
    Напишите программу, которая:
    1.  Создаёт массив из 7 элементов.
    2.  Использует указатель ptr для доступа к элементам массива, не используя индексирование массива (только арифметику указателей).
    3.  Находит максимальный элемент массива с помощью указателя.

    int mass[] = {1, 2, -12, 99, 5, 6, 7};
    auto *ptr = mass;
    auto n = sizeof(mass) / sizeof(mass[0]);
    int max = INT16_MIN;
    for (int &i : mass) {
        if (i >= max) {
            max = i;
        }
    }
    cout << endl;
    cout << "максимальный элемент масива: " << max << endl;*/

    int aa;
    cin >> aa;
    return 0;
}
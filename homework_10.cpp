#include <iostream>

using namespace std;

void summa(int a, int b) {
    cout << "сумма: " << a + b << endl;
}

void counters() {
    int local_counter = 0;
    static int static_counter;
    static int sc;
    local_counter++;
    static_counter++;
    sc++;
    cout << "вызов " << sc << " локальная переменная: " << local_counter << ", статическая переменная:" <<
            static_counter << endl;
}

int factorial(int n, int *counter) {
    (*counter)++; // Увеличиваем счетчик вызовов функции
    if (n == 0)
        return 1;
    return n * factorial(n - 1, counter);
}

void increment(int x) {
    ++x;
    cout << "значение переменной внутри функции: " << x << endl;
}

void swap(int &a, int &b) {
    int temp = a;
    a = b;
    b = temp;
}

int calculatesum(const int *arr, int size) {
    int sum = 0;
    for (int i = 0; i < size; i++) {
        sum += arr[i];
    }
    return sum;
}

int main() {
    /*Задача 1: Базовые функции (легкая)
    Напишите программу, которая:
    1.  Объявляет и определяет функцию int add(int a, int b), которая принимает два целых числа и возвращает их сумму.
    2.  В main() вызывает функцию add() с двумя числами, введенными пользователем.
    3.  Выводит результат вызова функции.
    Ожидаемый результат:
    Введите первое число: 5
    Введите второе число: 7
    Сумма: 12*/

    cout << "введите первое число: ";
    int a, b;
    cin >> a;
    cout << "введите второе число: ";
    cin >> b;
    summa(a ,b);
    cout << endl;

    /*Задача 2: Локальные и статические переменные (средняя)
    Напишите программу, которая:
    1.  Объявляет и определяет функцию void counter().
    o  Внутри функции создайте локальную переменную int local_counter, инициализируемую 0, и увеличьте ее на 1 при каждом вызове функции.
    o  Также создайте статическую переменную static int static_counter, которая увеличивается на 1 при каждом вызове.
    2.  В main() вызовите функцию counter() 5 раз.
    3.  Выведите значения локальной и статической переменных при каждом вызове.
    Ожидаемый результат:
    Вызов 1: Локальный счетчик = 1, Статический счетчик = 1
    Вызов 2: Локальный счетчик = 1, Статический счетчик = 2
    Вызов 3: Локальный счетчик = 1, Статический счетчик = 3
    Вызов 4: Локальный счетчик = 1, Статический счетчик = 4
    Вызов 5: Локальный счетчик = 1, Статический счетчик = 5*/

    counters();
    counters();
    counters();
    counters();
    counters();
    cout << endl;

    /*Задача 3: Рекурсия и указатели (сложная)
Напишите программу, которая:
1.  Объявляет и определяет рекурсивную функцию int factorial(int n, int* counter).
o  Функция принимает целое число n и указатель на переменную counter.
o  counter используется для подсчета количества вызовов функции.
o  Если n == 0, функция возвращает 1. Иначе ? возвращает n * factorial(n-1, counter).
o  При каждом вызове увеличивайте значение counter на 1.
2.  В main() просит пользователя ввести число n, вызывает функцию factorial() и выводит факториал числа n и количество вызовов функции.
Ожидаемый результат:
Введите число: 5
Факториал 5 = 120
Количество вызовов функции: 6( чат гпт помог)*/

    int n;
    cout << "Введите число: ";
    cin >> n;

    int counter = 0; // Переменная для подсчета количества вызовов
    int result = factorial(n, &counter);
    cout << "Факториал " << n << " = " << result << endl;
    cout << "Количество вызовов функции: " << counter << endl;
    cout << endl;

    /*Задача 1: Передача аргументов по значению (легкая)
Напишите программу, которая:
1.  Объявляет и определяет функцию void increment(int number), которая принимает число по значению, увеличивает его на 1 и выводит внутри функции.
2.  В main() инициализирует переменную int x = 10, вызывает функцию increment(x) и выводит значение x до и после вызова функции.
Ожидаемый результат:
Значение внутри функции: 11
Значение после вызова функции: 10*/

    int x = 10;
    increment(x);
    cout << "значение переменной после вызова функции: " << x << endl;
    cout << endl;

    /*Задача 2: Передача аргументов по ссылке (средняя)
Напишите программу, которая:
1.  Объявляет и определяет функцию void swap(int &a, int &b), которая принимает два числа по ссылке и меняет их местами.
2.  В main() инициализирует две переменные int x = 5 и int y = 10, вызывает функцию swap(x, y), а затем выводит значения x и y после вызова функции.
Ожидаемый результат:
До вызова swap: x = 5, y = 10
После вызова swap: x = 10, y = 5*/

    int xu = 5, yu = 10;
    cout << "до вызова swap: " << "x = " << xu << ", y = " << yu << endl;
    swap(xu, yu);
    cout << "после вызова swap: " << "x = " << xu << ", y = " << yu << endl;
    cout << endl;

    /*Задача 3: Константные параметры и передача по указателю (сложная)
Напишите программу, которая:
1.  Объявляет и определяет функцию int calculateSum(const int *arr, int size).
o  Функция принимает массив чисел (указатель на его первый элемент) и его размер.
o  Используя указатель, вычисляет и возвращает сумму всех элементов массива.
2.  В main() создайте массив int numbers[] = {2, 4, 6, 8, 10}.
3.  Вызывайте функцию calculateSum() и выводите сумму элементов массива.
Ожидаемый результат:
Сумма элементов массива: 30 */

    int numbers[] = {2, 4, 6, 8, 10};
    cout << "сумма элементов массива: " << calculatesum(numbers, 5) << endl;
    cout << endl;


    int ab;
    cin >> ab;
    return 0;
}
